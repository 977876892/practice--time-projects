node {

    def app

    env.ORG_NAME = 'ril'

    env.PROJECT_NAME = 'pnc-auction-ui-new'

    env.DOCKER_REGISTRY = 'http://qasdockermaster.ril.com:5050'

    env.TAG = 'latest'

    stage('Clone repository') {

        /* Let's make sure we have the repository cloned to our workspace */
        checkout scm
    }

    stage('Build image') {

        /* This builds the actual image; synonymous to
         * docker build on the command line */

        app = docker.build("${env.ORG_NAME}/${env.PROJECT_NAME}")
    }

    stage('Test') {

        /* Ideally, we would run a test framework against our image.
         * For this example, we're using a Volkswagen-type approach ;-) */

        app.inside {
          sh 'echo "Tests passed"'
        }
    }

    stage('Push image') {

        /* Finally, we'll push the image with two tags:
         * First, the incremental build number from Jenkins
         * Second, the 'latest' tag.
         * Pushing multiple tags is cheap, as all the layers are reused. */

        docker.withRegistry("${env.DOCKER_REGISTRY}") {
            app.push("${env.BUILD_NUMBER}")
            app.push("${env.TAG}")
        }
    }
}
